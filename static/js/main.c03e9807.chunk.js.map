{"version":3,"sources":["common/DragItemTypes.js","components/TableSurface.js","components/TableObject.js","components/TableObjectPalette.js","common/ObjectPalette.js","components/ItemPreview.js","store/actions/actionTypes.js","common/environment.js","containers/TableAndPalette.js","store/actions/spawnObject.js","containers/Dictaphone.js","store/actions/activityKeyword.js","containers/Layout.js","App.js","serviceWorker.js","store/reducers/activityKeyword.js","store/reducers/spawnObject.js","common/rpc.js","store/sagas/activityKeywordSaga.js","store/sagas/spawnObjectSaga.js","store/sagas/index.js","index.js"],"names":["types","TABLE_OBJECT","tableTarget","drop","props","monitor","component","_component$props","getClientOffset","findDOMNode","getBoundingClientRect","onDrop","apply","Object","toConsumableArray","clientOffset","componentRect","y","top","height","x","left","width","toXY","concat","getItem","text","hover","DropTarget","DragItemTypes","connect","connectDropTarget","dropTarget","isOver","withStyles","circle","borderRadius","boxSizing","border","display","margin","backgroundColor","classes","radius","innerRadius","scale","diameter","children","rs","react_default","a","createElement","className","style","borderWidth","styles","card","maxWidth","cardImageSize","media","draggable","DragSource","beginDrag","name","img","connectDragSource","dragSource","connectDragPreview","dragPreview","isDragging","content","Card_default","opacity","CardMedia_default","image","title","label","palette","map","paletteItem","TableObject","assign","key","preview","position","DragLayer","item","id","currentOffset","getSourceClientOffset","_ref","console","log","transform","pointerEvents","WebkitTransform","getItemStyles","src","ACTIVITY_KEYWORD","SPAWN_OBJECT","isTouchDevice","window","navigator","MaxTouchPoints","msMaxTouchPoints","tableComponent","padding","sliderRoot","overflow","slider","float","track","tableAndSlider","TableAndPalette","state","z","stuff","handleSliderChange","event","_this","setState","handleDrop","object","objectSpread","this","TableObjectPalette","ObjectPalette","TableSurface","Slider_default","max","container","trackAfter","value","onChange","vertical","components_ItemPreview","Component","dragDropBackend","TouchBackend","enableMouseEvents","enableTouchEvents","ignoreContextMenu","HTML5Backend","DragDropContext","dispatch","type","actionTypes","actions","DICTIONARY","spoon","shaker","pan","pause","resume","restart","pam","skillet","salt","Dictaphone","parseTranscript","wordsArray","toLowerCase","split","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","word","keyword","onActivityKeyword","resetTranscript","listening","startListening","err","return","_this$props","transcript","browserSupportsSpeechRecognition","length","Paper_default","Typography_default","onClick","error","Keyword","SpeechRecognition","Layout","containers_Dictaphone","containers_TableAndPalette","App","containers_Layout","Boolean","location","hostname","match","initialState","reducer","arguments","action","socket","URLSearchParams","document","search","substring","get","requestNumber","wsp","WebSocketAsPromised","packMessage","data","JSON","stringify","unpackMessage","message","parse","attachRequestId","requestId","MsgId","extractRequestId","onClose","addListener","reason","onOpen","rpc","asyncToGenerator","regenerator_default","mark","_callee","req","remoteCommand","request","response","openStatus","_args","wrap","_context","prev","Command","open","sent","sendPacked","t0","abrupt","stop","_x","activityKeywordSaga","_marked","spawnObjectSaga","spawnObjectSaga_marked","watchActivityKeyword","watchSpawnObject","all","takeEvery","sagas_marked","_context2","_marked2","rootReducer","combineReducers","activityKeword","activityKewordReducer","dropReducer","composeEnhancers","compose","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","es","src_App_0","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c03e9807.chunk.js","sourcesContent":["const types = {\n    TABLE_OBJECT:\"TABLE_OBJECT\"\n}\n\nexport default types;","import React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport { DropTarget } from 'react-dnd';\nimport DragItemTypes from '../common/DragItemTypes'\n\nconst styles = {\n    circle: {\n        borderRadius: '50%',\n        boxSizing: 'border-box',\n        border: 'solid burlywood',\n        display: 'block',\n        margin: 'auto',\n        backgroundColor: 'black'\n    }\n};\n\nfunction toXY(monitor, component) {\n    const clientOffset = monitor.getClientOffset();\n    const componentRect = findDOMNode(component).getBoundingClientRect();\n    const y = (clientOffset.y - componentRect.top) / componentRect.height;\n    const x = (clientOffset.x - componentRect.left) / componentRect.width;\n    return [x,y];\n\n}\n\nconst tableTarget = {\n    drop(props, monitor, component) {\n        const clientOffset = monitor.getClientOffset();\n        const componentRect = findDOMNode(component).getBoundingClientRect();\n        component.props.onDrop(...toXY(monitor,component), monitor.getItem().text);\n    },\n    hover(props, monitor, component) {\n        // const clientOffset = monitor.getClientOffset();\n        // const componentRect = findDOMNode(component).getBoundingClientRect();\n    \n        // console.log(clientOffset, componentRect);\n    }\n};\n\n\nfunction collect(connect, monitor) {\n    return {\n      connectDropTarget: connect.dropTarget(),\n      isOver: monitor.isOver()\n    };\n  }\n  \nconst tableSurface = (props) => {\n    const {classes, radius, innerRadius, scale, connectDropTarget, isOver, children } = props;\n    // console.log(props);\n\n    const diameter = `${2 * radius * scale}em`;\n    const rs = `${scale * (radius  - innerRadius)}em`;\n\n    return connectDropTarget (\n        <div className={classes.circle} style={{width:diameter, height:diameter, borderWidth:rs}}></div>\n    );\n};\n\nexport default DropTarget(DragItemTypes.TABLE_OBJECT, tableTarget, collect)(withStyles(styles)(tableSurface));\n// export default withStyles(styles)(DropTarget(DragItemTypes.TABLE_OBJECT, tableTarget, collect)(tableSurface));\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { DragSource } from 'react-dnd';\nimport { withStyles } from '@material-ui/core/styles';\nimport DragItemTypes from '../common/DragItemTypes'\n\nexport const cardImageSize = 60;\nconst styles = {\n    card: {\n        maxWidth: cardImageSize + 10,\n        display: 'inline',\n    },\n    media: {\n        width: cardImageSize,\n        height: cardImageSize,\n        margin: 'auto'\n    },\n    draggable: {\n        display:'inline-block',\n        margin: '1em'\n    }\n};\n\n/**\n * Implements the drag source contract.\n */\nconst cardSource = {\n    beginDrag(props) {\n      return {\n        // text: props.text,\n        name: props.text,\n        img: props.img,\n      };\n    }\n  };\n  \n  /**\n   * Specifies the props to inject into your component.\n   */\n  function collect(connect, monitor) {\n    return {\n      connectDragSource: connect.dragSource(),\n      connectDragPreview: connect.dragPreview(),\n      isDragging: monitor.isDragging()\n    };\n  }\n\n\n\n\nconst tableObject = props => {\n    const {classes, isDragging, connectDragSource, connectDragPreview, text } = props;\n    let content = (\n        <div className={classes.draggable} >\n            <Card className={classes.card} style={{ opacity: isDragging ? 0.5 : 1 }}>\n                <CardMedia className={classes.media}\n                image={props.img}\n                title={props.label} \n                />\n                {/* <CardContent>{text}</CardContent> */}\n            </Card>\n        </div>\n    );\n    // Connect as drag source\n    content = connectDragSource(content);\n    content = connectDragPreview(content);\n    return content;\n}\n\nexport default DragSource(DragItemTypes.TABLE_OBJECT, cardSource, collect)(withStyles(styles)(tableObject));\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TableObject from './TableObject';\n\nconst styles = {\n    palette: {\n        // display: 'inline'\n    }\n};\n\nconst tableObjectPalette = (props) => {\n    const {classes} = props;\n    return (\n        <div className={classes.palette}>\n            {\n                props.palette.map(paletteItem => (\n                <TableObject text={paletteItem.label} key={paletteItem.label} {...paletteItem} />\n            ))}\n        </div>\n    )\n\n}\n\nexport default withStyles(styles)(tableObjectPalette);","const palette = [\n    {\n        label:'apple',\n        img: '/static/apple.svg'\n    },\n    {\n        label:'burger',\n        img: '/static/burger.svg'\n    },\n    {\n        label:'cake',\n        img: '/static/cake.svg'\n    },\n    {\n        label:'cupcake',\n        img: '/static/cupcake.svg'\n    },\n    {\n        label:'strawberry',\n        img: '/static/strawberry.svg'\n    },\n    {\n        label:'watermelon',\n        img: '/static/watermelon.svg'\n    },\n];\nexport default palette;","/**\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the MIT License. See the accompanying LICENSE file for terms.\n */\n'use strict';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport DragLayer from 'react-dnd/lib/DragLayer';\nimport { withStyles } from '@material-ui/core/styles';\nimport { cardImageSize } from './TableObject'\nconst styles = {\n    preview: {\n        opacity: 0.8,\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: cardImageSize,\n        height: cardImageSize,\n    }\n}\nfunction collect(monitor) {\n    var item = monitor.getItem();\n    return {\n        id: item && item.id,\n        name: item && item.name,\n        img: item && item.img,\n        currentOffset: monitor.getSourceClientOffset(),\n        isDragging: monitor.isDragging()\n    };\n}\n\nfunction getItemStyles(currentOffset) {\n    if (!currentOffset) {\n        return {\n            display: 'none'\n        };\n    }\n\n    // http://www.paulirish.com/2012/why-moving-elements-with-translate-is-better-than-posabs-topleft/\n    var x = currentOffset.x;\n    var y = currentOffset.y;\n    var transform = `translate(${x}px, ${y}px)`;\n\n    return {\n        pointerEvents: 'none',\n        transform: transform,\n        WebkitTransform: transform\n    };\n}\n\nconst ItemPreview = ({\n    classes,\n    id,\n    name,\n    img,\n    isDragging,\n    currentOffset\n}) => {\n    if (!isDragging) {\n        return <li></li>;\n    }\n    console.log(id, name)\n    return (\n        <div\n            className={classes.preview}\n            style={getItemStyles(currentOffset)}\n        >\n        <img src={img}></img>\n        </div>\n    );\n}\n\nItemPreview.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string,\n    img: PropTypes.string,\n    currentOffset: PropTypes.shape({\n        x: PropTypes.number,\n        y: PropTypes.number\n    }),\n    isDragging: PropTypes.bool\n};\n\nexport default DragLayer(collect)(withStyles(styles)(ItemPreview));\n","export const ACTIVITY_KEYWORD = 'ActivityKeyword';\nexport const SPAWN_OBJECT = 'SpawnObject';\n","export function isTouchDevice() {\n    return (('ontouchstart' in window)\n        || (navigator.MaxTouchPoints > 0)\n        || (navigator.msMaxTouchPoints > 0));\n}\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport TableSurface from '../components/TableSurface';\nimport TableObjectPalette from '../components/TableObjectPalette';\nimport ObjectPalette from '../common/ObjectPalette';\nimport { withStyles } from '@material-ui/core/styles';\nimport HTML5Backend from 'react-dnd-html5-backend'; //TODO import touch backend instead\nimport TouchBackend from 'react-dnd-touch-backend';\nimport ItemPreview from '../components/ItemPreview';\nimport { DragDropContext } from 'react-dnd';\nimport Slider from '@material-ui/lab/Slider';\nimport * as actions from '../store/actions'\nimport { isTouchDevice } from '../common/environment';\nimport DragItemTypes from '../common/DragItemTypes'\n\nconst tablePadding = '2em';\nconst styles = {\n    tableComponent: {\n        backgroundColor: 'black',\n        padding: tablePadding,\n        margin: 'auto'\n    },\n    sliderRoot: {\n        display: 'flex',\n        overflow: 'hidden'\n    },\n    slider: {\n        padding: '0px 22px',\n        float: 'left'\n    },\n    track: {\n        width: '6px',\n        backgroundColor: 'red'\n    },\n    tableAndSlider: {\n        // display: 'inline-block',\n    }\n};\n\n\nclass TableAndPalette extends Component {\n    state = {\n        z: 0.50,\n        stuff: null\n    };\n\n    handleSliderChange = (event, z) => {\n        this.setState({ z });\n    };\n\n    handleDrop = (x, y, object) => {\n        this.props.onDrop(x, y, this.state.z, object);\n        this.setState({ ...this.state, stuff: `Dropped ${object} at (${x}, ${y}, ${this.state.z})` });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { z } = this.state;\n        return (\n            <div >\n                {/* Stuff: {this.state.stuff} */}\n                <TableObjectPalette palette={ObjectPalette} ></TableObjectPalette>\n                <div style={{ display: 'flex' }}>\n                    <div className={classes.tableComponent}>\n                        <TableSurface scale={.25} radius={100} innerRadius={30} onDrop={this.handleDrop}></TableSurface>\n                    </div>\n                    <div className={classes.sliderRoot}>\n                        <Slider\n                            max={1}\n                            // className={classes.slider}\n                            classes={{ container: classes.slider, trackAfter: classes.track }}\n                            value={z}\n                            onChange={this.handleSliderChange}\n                            vertical\n                        />\n                    </div>\n                </div>\n                {isTouchDevice() ?\n                    <ItemPreview key=\"__preview\" name={DragItemTypes.TABLE_OBJECT} /> :\n                    null}\n            </div>\n        )\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        //   signing: state.flash.signing,\n        //   signError: state.flash.signError,\n        //   result: state.flash.result,\n        //   flashing: state.flash.flashing,\n        //   image: state.flash.image\n    }\n};\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onDrop: (x, y, z, object) => dispatch(actions.spawnObject(x, y, z, object))\n    }\n};\n\nconst dragDropBackend = isTouchDevice() ? TouchBackend({ enableMouseEvents: true, enableTouchEvents: true, ignoreContextMenu: true }) : HTML5Backend;\nexport default DragDropContext(dragDropBackend)(\n    connect(mapStateToProps, mapDispatchToProps)(\n        withStyles(styles)(\n            TableAndPalette)));\n","import * as actionTypes from './actionTypes';\n\nexport const spawnObject = (x,y,z, object) => {\n  return {\n      type: actionTypes.SPAWN_OBJECT,\n      x: x,\n      y: y,\n      z: z,\n      object: object\n  };\n};\n","import React, { Component } from 'react'\nimport SpeechRecognition from 'react-speech-recognition'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport * as actions from '../store/actions'\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst propTypes = {\n  // Props injected by SpeechRecognition\n  transcript: PropTypes.string,\n  resetTranscript: PropTypes.func,\n  browserSupportsSpeechRecognition: PropTypes.bool\n}\n\nconst DICTIONARY = {\n  'spoon': 'spoon',\n  'shaker': 'shaker',\n  'pan': 'pan',\n  'pause': 'pause',\n  'resume': 'resume',\n  'restart': 'restart',\n\n  'pam': 'pan',\n  'skillet': 'pan',\n  'salt': 'shaker'\n}\nclass Dictaphone extends Component {\n\n  parseTranscript = (text) => {\n    const keywords = ['spoon', 'shaker', 'pan', 'pause', 'resume', 'restart'];\n    const wordsArray = text.toLowerCase().split(\" \");\n    for (let word of wordsArray) {\n      let keyword = DICTIONARY[word];\n      if (keyword) {\n        this.props.onActivityKeyword(keyword);\n        this.props.resetTranscript();\n        if (!this.props.listening) {\n          this.props.startListening();\n        }\n        break;\n      }\n    }\n\n    return null;\n  }\n\n  render() {\n    const { transcript, resetTranscript, listening, startListening, browserSupportsSpeechRecognition } = this.props\n    if (!listening) startListening();\n    if (transcript.split(\"\").length > 140) resetTranscript();\n\n    if (!browserSupportsSpeechRecognition) {\n      console.error(\"not supported\");\n      return null\n    }\n\n    return (\n      <div>\n        {transcript.split(\" \").length > 1 ? this.parseTranscript(transcript) : null}\n        <Paper style={{padding: '1em'}}>\n          <Typography>\n           {transcript}\n          </Typography>\n          <button onClick={resetTranscript}>Reset</button>\n        </Paper>\n      </div>\n    )\n  }\n}\n\nDictaphone.propTypes = propTypes\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onActivityKeyword: (keyword) => dispatch(actions.activityKeyword(keyword))\n  }\n};\n\nexport default connect(null, mapDispatchToProps)(SpeechRecognition(Dictaphone));","import * as actionTypes from './actionTypes';\n\nexport const activityKeyword  = (Keyword) => {\n  return {\n    type: actionTypes.ACTIVITY_KEYWORD,\n    Keyword: Keyword\n  };\n};\n","import React, { Component } from 'react';\nimport TableAndPalette from './TableAndPalette';\nimport Dictaphone from './Dictaphone';\n\nclass Layout extends Component {\n    render() {\n        return (\n\n            <div>\n                <Dictaphone />\n                <TableAndPalette />\n            </div>\n        );\n    }\n}\n\nexport default Layout;","import React, { Component } from 'react';\nimport './App.css';\nimport Layout from './containers/Layout';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Layout />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nimport * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    keyword: \"\" // TODO this should be more than 1 word eventually\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.ACTIVITY_KEYWORD:\n            return {\n                ...state,\n                keyword: action.keyword\n            }\n            return { ...initialState };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","\nimport * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    z: 0.5,\n    x: 0.5,\n    y: 0.5,\n    object: \"apple\"\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SPAWN_OBJECT:\n            return {\n                ...state,\n                x: action.x,\n                y: action.y,\n                z: action.z,\n                object: action.object\n            }\n            return { ...initialState };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import WebSocketAsPromised from 'websocket-as-promised';\nconst DEFAULT_SOCKET_SERVER = '35.236.3.106/ws/';\n\nlet params = new URLSearchParams(document.location.search.substring(1));\nlet socket = params.get(\"socket\") || DEFAULT_SOCKET_SERVER; // is the string \"Jonathan\"\nconsole.log(socket);\nlet requestNumber = 0;\nlet wsp = null;\n\nif (socket !== 'none') {\n    wsp = new WebSocketAsPromised('ws://' + socket, {\n        packMessage: data => JSON.stringify(data),\n        unpackMessage: message => JSON.parse(message),\n        attachRequestId: (data, requestId) => Object.assign({ MsgId: requestId }, data), // attach requestId to message as `id` field\n        extractRequestId: (data) => { \n            let id = data && data.MsgId;\n            // console.log(\"extracted id\", id, data);\n            return id;\n        },                                  // read requestId from message `id` field\n    });\n    wsp.onClose.addListener(event => console.log(`Connection closed: ${event.reason}`));\n    wsp.onOpen.addListener(() => console.log('Connection opened'));\n\n}\n\n\nconst rpc = async (req, remoteCommand = null) => {\n    requestNumber++; // generate a request Id to conform to what game wants\n    const requestId = 'TBL' + requestNumber;\n    const request = { ...req, MsgId: requestId, Command: remoteCommand ? remoteCommand : req.type };\n    delete request.type;\n    console.log('request',request);\n    let response = '';\n    if (wsp) {\n        let openStatus;\n        try {\n            openStatus = await wsp.open();\n            // response = await wsp.sendRequest(request, { requestId: requestId });\n            response = await wsp.sendPacked(request);\n        } catch (e) {\n            console.error(\"caught web socket error. openStatus=\",openStatus,\"error\",e);\n        }\n    }\n    console.log(\"resp\",response)\n    return response\n}\n\nexport default rpc;","import rpc from '../../common/rpc';\n\n\nexport function* activityKeywordSaga(action) {\n  yield rpc(action);\n}\n","import rpc from '../../common/rpc';\n\nexport function* spawnObjectSaga(action) {\n  yield rpc(action, 'SpawnFood');\n}\n\n","import { takeEvery, all } from \"redux-saga/effects\";\n\nimport * as actionTypes from \"../actions/actionTypes\";\nimport {activityKeywordSaga} from \"./activityKeywordSaga\";\nimport {spawnObjectSaga} from \"./spawnObjectSaga\";\n\n\nexport function* watchActivityKeyword() {\n  yield all([\n    takeEvery(actionTypes.ACTIVITY_KEYWORD, activityKeywordSaga)\n  ]);\n}\n\nexport function* watchSpawnObject() {\n  yield all([\n    takeEvery(actionTypes.SPAWN_OBJECT, spawnObjectSaga)\n  ]);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from \"redux-saga\";\n\nimport activityKewordReducer from './store/reducers/activityKeyword';\nimport dropReducer from './store/reducers/spawnObject';\nimport { watchActivityKeyword, watchSpawnObject } from './store/sagas';\n\n\nconst rootReducer = combineReducers({\n    activityKeword: activityKewordReducer,\n    drop: dropReducer\n});\n\nlet composeEnhancers = compose;\nif (process.env.NODE_ENV === \"development\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n    composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n}\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(sagaMiddleware)));\n\nsagaMiddleware.run(watchActivityKeyword);\nsagaMiddleware.run(watchSpawnObject);\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>, document.getElementById('root'));\n    \n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}